knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_csv("data/chds6162_data.csv")
head(data,10)
tail(data,10)
tail(data)
tail(data,15)
data <- read_csv("data/chds6162_data.csv")
head(data,15)
?rename
data <- rename(data, date = dateofvisit)
head(data)
rename(data, date = dateofvisit)
data <- read_csv("data/chds6162_data.csv")
rename(data, date = dateofvisit)
head(data)
rename(data, date = dateofvisit)
data <- rename(data, date = dateofvisit)
head(data)
#make them all upper case
rename_with(data, toupper)
#make them all lower case
rename_with(data, tolower)
?rename_with
?clean_names
data %>%
clean_names(., "big_camel")
data %>%
clean_names(., "big_camel")
library(tidyverse)
data %>%
clean_names(., "big_camel")
# clean_names is part of the function called janitor
library(janitor)
data %>%
clean_names(., "big_camel")
data %>%
clean_names(., "screaming_snake")
data %>%
clean_names(., "screaming_snake")
?clean_names
?separate
head(df)
# If you want to split by any non-alphanumeric value (the default)
df <- data.frame(x = c(NA, "a.b", "a.d", "b.c"))
head(df)
df %>%
separate(x, c("col w A", "col w B"))
# If you just want the second variable:
df %>%
separate(x, c(NA, "B"))
df <- data.frame(x = c("a", "a b", "a b c", NA))
head(df)
df %>%
separate(x, c("column with As", "column with Bs"))
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2)
?unite
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2, sep = ".")
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2, sep = "%")
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2, sep = "::")
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2, sep = "space")
data_ges <- data %>%
select(gestation)
data %>%
select(gestation)
data
data %>%
select(drace:dwt)
data
#What about just the id column and everything after the father information?
data %>%
select(id, marital:last_col())
data %>%
select(-(marital))
data %>%
select(-(marital:last_col()))
data %>%
filter(marital == 5) %>%
select(age)
data %>%
filter(marital == 5)
data %>%
filter(marital != 3)
data %>%
filter(marital %in% c(2, 3,4))
data %>%
filter(ed == 5, age %in% 20:30)
head(data)
data %>%
mutate(data_decade = "60s")
data %>%
mutate(wt_k = wt*.454)
data %>%
mutate(wt_k = round((wt*.454),2))
data %>%
mutate(wt_k = round((wt*.454),1))
data
data %>%
mutate(marital = case_when(
marital == 1 ~ "married",
marital == 2 ~ "legally separated",
marital == 3 ~ "divorced",
marital == 4 ~ "widowed",
marital == 5 ~ "never married"
))
data %>%
mutate(id = case_when(
id == 7748 ~ 7749,
TRUE ~ id
))
data %>%
mutate(id = case_when(
id == 15 ~ 19,
TRUE ~ id
))
data %>%
summarize(gestation_length_mean = round(mean(gestation, na.rm = TRUE),2))
data %>%
summarize(gestation_length_mean = round(mean(gestation, na.rm = TRUE),2)) %>%
pull()
data %>%
summarize(mean_gestation_length = mean(gestation, na.rm = TRUE),
min_gestation_length = min(gestation, na.rm = TRUE),
max_gestation_length = max(gestation, na.rm = TRUE))
data %>%
group_by(smoke) %>%
summarize(mean_gestation_length = mean(gestation,
na.rm = TRUE))
#Since we know that there are some NAs in the Smoke variable we can go ahead and drop those NAs before we summarize them
data %>%
drop_na(smoke) %>%
group_by(smoke) %>%
summarize(mean_gestation_length = mean(gestation,
na.rm = TRUE))
data %>%
group_by(smoke,ed) %>%
summarize(mean_gestation_length = mean(gestation,
na.rm = TRUE))
View(data)
#But we know better:
data %>%
drop_na(smoke) %>%
group_by(smoke) %>%
summarize(across(c(gestation,age,dage),mean,na.rm = TRUE))
?across
to_graph <- data %>%
drop_na(smoke) %>%
group_by(smoke) %>%
summarize(across(c(gestation,age,dage),mean,na.rm = TRUE))
to_graph
to_graph %>%
relocate (age, .before = gestation)
#What if I wanted gestation to be the last column?
to_graph %>%
relocate (gestation, .after = last_col())
# ok now I like it and want a CSV of it.
# I make sure to save it as a dataframe and then export it
csv_to_export <- to_graph %>%
relocate (gestation, .after = last_col())
# export csv
write_csv(csv_to_export, "exports/example_to_export.csv")
csv_to_export
data %>%
pivot_longer(c(wt,dwt), names_to = "mom_dad", values_to = "wt")
data
data %>%
pivot_longer(c(wt,dwt), names_to = "mom_dad", values_to = "wt")
csv_to_export %>%
pivot_longer(c(age,dage), names_to = "mom_dad", values_to = "age_mean")
oops <- csv_to_export %>%
pivot_longer(c(age,dage), names_to = "mom_dad", values_to = "age_mean")
oops %>%
pivot_wider(names_from = mom_dad, values_from = "wt")
oops %>%
pivot_wider(names_from = mom_dad, values_from = "age_mean")
oops <- csv_to_export %>%
pivot_longer(c(age,dage), names_to = "mom_dad", values_to = "age_mean")
oops
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
data <- read_csv("data/chds6162_data.csv")
data %>%
select(marital)
data %>%
select(marital,ed)
data %>%
select(wt:number)
data %>%
select(wt:last_col())
data %>%
select(-race)
data %>%
select(-(drace:dwt))
data %>%
filter(marital == 3) %>%
select(marital)
data %>%
filter(marital == 3)
data %>%
filter(marital != 3)
data %>%
filter(race %in% c(0:5))
data %>%
filter(ed == 5) %>%
filter(marital != 5) %>%
select(ed, marital)
data %>%
filter(ed == 5) %>%
filter(marital != 5)
data %>%
mutate(country = "US")
data %>%
mutate(gestation_weeks = round(gestation / 7,2)) %>%
select(gestation, gestation_weeks)
data %>%
mutate(dwt = dwt / 2.205) %>%
select(dwt)
data %>%
mutate(dwt = dwt / 2.205)
mutate(dwt = round(dwt / 2.205,2) %>%
data %>%
mutate(dwt = round(dwt / 2.205,2)) %>%
select(dwt)
data %>%
data %>%
mutate(dwt = round(dwt / 2.205,2)) %>%
select(dwt)
data %>%
mutate(dwt = round(dwt / 2.205,2)) %>%
select(dwt)
range(data$age,na.rm = TRUE)
data %>%
mutate(age_group = case_when(
age %in% 10:19 ~ "10s",
age %in% 20:29 ~ "20s",
age %in% 30:39 ~ "30s",
age %in% 40:49 ~ "40s",
age %in% 50:59 ~ "50s"
))
data %>%
summarize(mean_dad_weight = mean(dwt,na.rm = TRUE),
median_dad_weight = median(dwt, na.rm = TRUE),
min_dad_weight = min(dwt, na.rm = TRUE),
max_dad_weight = max(dwt, na.rm = TRUE))
data %>%
group_by(ded) %>%
drop_na(ded) %>%
summarize(dad_weight = mean(dwt,
na.rm = TRUE))
data %>%
drop_na(drace) %>%
group_by(drace) %>%
summarize(across(dage:dwt, mean, na.rm = TRUE))
mothers_below30 <- data %>%
filter(age < 30) %>%
mutate(gestation_w = gestation/7) %>%
group_by(ed) %>%
summarize(mean_gestation_w = mean(gestation_w,na.rm = TRUE))
mothers_below30
styler:::style_active_file()
xaringan:::inf_mr()
xaringan:::inf_mr()
knit_with_parameters("~/Box/Georgetown/Workshop/Data Wrangling - Rladies Oct 2022/Rladies-Wrangling-Data-in-the-Tidyverse/01-main-slides.Rmd")
unlink("01-main-slides_cache", recursive = TRUE)
renderthis::to_pdf("01-main-slides.Rmd")
renderthis::to_pdf("03-end-of-workshop-slides.Rmd")
renderthis::to_pdf("03-end-of-workshop-slides.Rmd")
renderthis::to_pdf("03-end-of-workshop-slides.Rmd")
renderthis::to_pdf("01-main-slides.Rmd")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read_csv("data/chds6162_data.csv")
head(data,15)
#Let's clean that column with too many characters to simply be date rather than dateofvisit
data <- rename(data, date = dateofvisit)
head(data)
#make them all upper case
rename_with(data, toupper)
#make them all lower case
rename_with(data, tolower)
# clean_names is part of the function called janitor
library(janitor)
data %>%
clean_names(., "big_camel")
data %>%
clean_names(., "screaming_snake")
# If you want to split by any non-alphanumeric value (the default)
df <- data.frame(x = c(NA, "a.b", "a.d", "b.c"))
head(df)
df %>%
separate(x, c("col w A", "col w B"))
# If you just want the second variable:
df %>%
separate(x, c(NA, "B"))
df <- data.frame(x = c("a", "a b", "a b c", NA))
head(df)
df %>%
separate(x, c("column with As", "column with Bs"))
df %>%
separate(x, c("column with As", "column with Bs")) %>%
unite("new col",1:2)
data_ges <- data %>%
select(gestation)
data %>%
select(drace:dwt)
#What about just the id column and everything after the father information?
data %>%
select(id, marital:last_col())
data %>%
select(-(marital))
data %>%
filter(marital == 5) %>%
select(age)
data %>%
filter(marital != 3)
data %>%
filter(marital %in% c(2, 3,4))
data %>%
filter(ed == 5, age %in% 20:30)
View(data)
data %>%
mutate(wt_k = wt.1*.454)
